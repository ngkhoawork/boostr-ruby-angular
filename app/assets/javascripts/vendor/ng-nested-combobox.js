!function(e,n,o){"use strict";n.module("ui.nested.combobox",[]).constant("nestedComboBoxConfig",{options:{childrenParam:"children"}}).controller("NestedComboBoxController",["$scope","$element","$attrs","nestedComboBoxConfig","$timeout",function(e,o,l,t,i){var r=this;this.isOpen=!1,this.options=n.isDefined(e.options)?e.options:t.options,this.toggleOpen=function(){return e.controlDisabled?(this.isOpen=!1,!1):void(this.isOpen=!this.isOpen)},this.toggleBlur=function(){i(function(){r.isOpen=!1},200)},this.toggleFocus=function(){return e.controlDisabled?(this.isOpen=!1,!1):void(r.isOpen=!1)},e.findNode=function(o,l){var t,i,c;if(o===l.id)return l;if(n.isArray(l[r.options.childrenParam]))for(t=0;t<l[r.options.childrenParam].length;t+=1)if(i=l[r.options.childrenParam][t],c=e.findNode(o,i),c!==!1)return c;return!1}}]).directive("nestedComboBox",["$templateCache",function(e){var o=function(e,o,l,t){function i(o){var l=null;if(e.collection){var t=n.isObject(o)?o.id:o;n.isArray(e.collection)||(e.collection=[e.collection]);for(var i=0;i<e.collection.length;i+=1){var r=e.findNode(t,e.collection[i]);r&&(l=r)}e.selectValue(null,l)}}e.ngModelController=t,t&&(e.selectValue=function(o,l){n.isFunction(e.changeEvent)&&e.changeEvent(l),e.ngModelController.$setViewValue(l),e.ngModelController.$render()},e.$watch("model",function(e){i(e)}),e.$watchCollection("collection",function(){e.ngModelController.$modelValue&&i(e.ngModelController.$modelValue),n.isFunction(e.changeEvent)&&e.changeEvent()}))};return{restrict:"E",controller:"NestedComboBoxController",controllerAs:"gs",link:o,require:"ngModel",replace:!0,template:e.get("select-group.html"),scope:{collection:"=?",controlClass:"@?",controlDisabled:"=?",changeEvent:"=?",options:"=?",model:"=ngModel"}}}])}(window,window.angular),function(e){try{e=angular.module("ui.nested.combobox")}catch(n){e=angular.module("ui.nested.combobox",[])}e.run(["$templateCache",function(e){e.put("select-group.html",'<div class="custom-select" data-ng-disabled="controlDisabled" data-ng-class="controlClass" data-ng-click="gs.toggleOpen()"  >\n    <input data-ng-model="ngModelController.$modelValue.name" ng-blur="gs.toggleBlur()" ng-focus="gs.toggleFocus()"\n           readonly />\n    <span><i class="icon-sort-down"></i></span>\n    <div class="list" data-ng-show="gs.isOpen">\n        <ul>\n            <li data-ng-class="{\'active\':ngModelController.$modelValue.id === member.id}" data-ng-include="\'sub-level.html\'"\n                data-ng-repeat="member in collection track by member.id"></li>\n        </ul>\n    </div>\n</div>')}])}(),function(e){try{e=angular.module("ui.nested.combobox")}catch(n){e=angular.module("ui.nested.combobox",[])}e.run(["$templateCache",function(e){e.put("sub-level.html",'<a href="" data-ng-click="selectValue(e,member)"><span>{{member.name}}</span></a>\n<ul>\n    <li data-ng-class="{\'active\':ngModelController.$modelValue.id === member.id}"\n        ng-repeat="member in member[gs.options.childrenParam] track by member.id" ng-include="\'sub-level.html\'"></li>\n</ul>\n')}])}();