#notification-modal.api-config-modal
  %form{ name: 'api_configuration_form', ng: { submit: 'submitForm()' } }
    .modal-header.text-center
      %a.close{ ng: { click: 'cancel()' } }
        %span{'aria-hidden' => 'true'}
          = inline_svg 'icons/close.svg'
      %h3.modal-title
        %strong
          {{ formType }} SSP Integration
    .modal-body
      .form-group
        .row
          .col-xs-12
            %label.control-label{ for: 'switched_on' } Integration Enabled
            .show-hide-remainder-form.toggle-on-modal
              .switch-remainder-form
                %input#switched-on-toggle.cmn-toggle.cmn-toggle-round-flat{type: 'checkbox', 'ng-model': 'api_configuration.switched_on'}
                %label{:for => "switched-on-toggle"}
                  %span
      .form-group{ ng: { if: 'formType != \'Edit\'' } }
        %span.error-text
        %label{ for: 'client-type' } Account Type
        %span.star *
        %ui-select{ name: 'client-type', ng: { model: 'api_configuration.type_id', change: 'select_provider("")', disabled: true } }
          %ui-select-match{ placeholder: 'Account Type' }
            {{ $select.selected.name }}
          %ui-select-choices{ repeat: 'option.id as option in providers' }
            %div{ ng: { bind: { html: 'option.name' } } }
      .form-group
        .row
          .col-xs-12
            %label.control-label{ for: 'integration_provider' } Integration type
            %input.form-control{ ng: { model: 'api_configuration.integration_provider' }, disabled: 'true' }
          .col-xs-12
            %label.control-label{ for: 'publisher_id' } API Publisher id
            %input.form-control{ placeholder: 'Publisher id', ng: { model: 'api_configuration.publisher_id' }, name: 'publisher_id', required: true  }
      #credentials_spotx{ng: { if: 'api_configuration.type_id == 2' }}
        .form-group
          .row
            .col-xs-12
              %label.control-label{ for: 'key' } Api Key
              %input.form-control{ placeholder: 'Api Key', ng: { model: 'api_configuration.key' }, name: 'key', required: true  }
        .form-group
          .row
            .col-xs-12
              %label.control-label{ for: 'secret' } Api Secret
              %input.form-control{ placeholder: 'Api Secret', ng: { model: 'api_configuration.secret' }, name: 'secret', required: true  }
      #credentials_rubicon{ng: { if: 'api_configuration.type_id == 1' }}
        .form-group
          .row
            .col-xs-12
              %label.control-label{ for: 'key' } Username
              %input.form-control{ placeholder: 'Username', ng: { model: 'api_configuration.key' }, name: 'key', required: true  }
        .form-group
          .row
            .col-xs-12
              %label.control-label{ for: 'secret' } Password
              %input.form-control{ placeholder: 'Password', ng: { model: 'api_configuration.secret' }, name: 'secret', required: true  }

    .modal-footer.text-center
      %button.btn.btn-primary.btn-lg{ type: 'submit' } {{ submitText }}
      %a.btn.btn-default.btn-lg{ ng: { click: 'cancel()' } } Cancel
