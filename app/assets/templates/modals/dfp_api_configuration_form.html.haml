#notification-modal
  %form{ name: 'api_configuration_form', ng: { submit: 'submitForm()' } }
    .modal-header.text-center
      %a.close{ ng: { click: 'cancel()' } }
        %span{'aria-hidden' => 'true'}
          = inline_svg 'icons/close.svg'
      %h3.modal-title
        %strong
          {{ formType }} DFP Api Integration
    .modal-body
      .form-group
        .row
          .col-xs-12
            %label.control-label{ for: 'switched_on' } Switch on/off integration
            %input{ ng: { model: 'api_configuration.switched_on' }, type: 'checkbox' }
        .row
          .col-xs-12
            %label.control-label{ for: 'integration_type' } Integration type
            %input.form-control{ ng: { model: 'api_configuration.integration_provider', disabled: 'true' } }
        .row
          .col-xs-12
            %label.control-label{ for: 'json_api_key' } API json key
            %textarea.form-control{ ng: { model: 'api_configuration.json_api_key' }, name: 'json_api_key', required: 'true', rows: 4, placeholder: 'Please copy/paste your service account json key' }
        .row
          .col-xs-12
            %label.control-label{ for: 'network_code' } Network code
            %input.form-control{ ng: { model: 'api_configuration.network_code' }, name: 'network_code', required: 'true', placeholder: 'Please enter your DFP network code' }
        .row
          .col-xs-12
            %label.control-label{ for: 'cpm_percentage' } CPM budget adjustment percentage
            %input.form-control{ ng: { model: 'cpm_budget_adjustment.percentage' }, name: 'cpm_percentage', required: 'true', placeholder: 'Please enter CPM adjustment. Set to 0 if not required', type: 'number', step: '0.1' }
        .row
          %h3.text-center Cumulative report query
          .col-xs-12
            %label.control-label{ for: 'cumulative_query_type' } Query type
            %input.form-control{ ng: { model: 'cumulative_dfp_report_query.report_type', init: 'cumulative' }, name: 'cumulative_report_type', required: 'true', disabled: 'true' }
          .col-xs-12
            %label.control-label{ for: 'report_id' } Query id
            %input.form-control{ ng: { model: 'cumulative_dfp_report_query.report_id' }, name: 'report_id', required: 'true' }
          .col-xs-12
            %label.control-label{ for: 'weekly_recurrence_day' } Day of week to fetch report
            %select.form-control{ ng: { model: 'cumulative_dfp_report_query.weekly_recurrence_day', options: 'day for day in weekdays' }, name: 'weekly_recurrence_day', required: 'true' }
          .col-xs-12
            %label.control-label{ for: 'is_daily_recurrent' } Is daily recurrent?
            %input{ ng: { model: 'cumulative_dfp_report_query.is_daily_recurrent' }, name: 'is_daily_recurrent', type: 'checkbox' }

        .row
          %h3.text-center Monthly report query
          .col-xs-12
            %label.control-label{ for: 'monthly_query_type' } Query type
            %input.form-control{ ng: { model: 'monthly_dfp_report_query.report_type', init: 'monthly' }, name: 'monthly_query_type', required: 'true', disabled: 'true' }
          .col-xs-12
            %label.control-label{ for: 'report_id' } Query id
            %input.form-control{ ng: { model: 'monthly_dfp_report_query.report_id' }, name: 'report_id', required: 'true' }
          .col-xs-12
            %label.control-label{ for: 'monthly_recurrence_day' } Day of month to fetch report
            %select.form-control{ ng: { model: 'monthly_dfp_report_query.monthly_recurrence_day', options: 'day for day in monthDays' }, name: 'weekly_recurrence_day', required: 'true' }

    .modal-footer.text-center
      %button.btn.btn-primary.btn-lg{ type: 'submit' } {{ submitText }}
      %a.btn.btn-default.btn-lg{ ng: { click: 'cancel()' } } Cancel