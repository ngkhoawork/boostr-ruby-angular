#activity-form-modal.popup-modal
    %form#product-form{ ng: { submit: 'addContentFee()' } }
        .popup-modal-header
            New Content Fee
            %span.close-btn{'ng-click': 'cancel()'}
        .popup-modal-body
            .row
                .col-xs-6{ 'ng-if': '!productOptionsEnabled' }
                    .form-group
                        %label Product
                        %ui-select{ name: 'product', ng: { model: 'content_fee.product_id', disabled: true, required: true } }
                            %ui-select-match{ placeholder: 'Product' }
                                {{ $select.selected.name }}
                            %ui-select-choices{ repeat: 'product.id as product in productsByLevel(0) | orderBy: "name" | filter: { name: $select.search }' }
                                %div{ ng: { bind: { html: 'product.name' } } }
                .col-xs-4{ 'ng-if': 'productOptionsEnabled' }
                    .form-group
                        %label Product
                        %ui-select{ name: 'product_level_0', ng: { model: 'content_fee.product0', required: true }, 'on-select': 'onChangeProduct($item, $model)' }
                            %ui-select-match{ placeholder: 'Product' }
                                {{ $select.selected.name }}
                            %ui-select-choices{ repeat: 'product.id as product in productsByLevel(0) | orderBy: "name" | filter: { name: $select.search }' }
                                %div{ ng: { bind: { html: 'product.name' } } }
                .col-xs-4{ 'ng-if': 'productOptionsEnabled && productOption1Enabled' }
                    .form-group
                        %label {{ option1Field }}
                        %ui-select{ name: 'product_level_1', ng: { model: 'content_fee.product1', disabled: '!content_fee.product0 || productsByLevel(1).length == 0', required: true }, 'on-select': 'onChangeProduct($item, $model)' }
                            %ui-select-match{ placeholder: '{{ option1Field }}', 'allow-clear': 'true' }
                                {{ $select.selected.name }}
                            %ui-select-choices{ repeat: 'product.id as product in productsByLevel(1) | orderBy: "name" | filter: { name: $select.search }' }
                                %div{ ng: { bind: { html: 'product.name' } } }
                .col-xs-4{ 'ng-if': 'productOptionsEnabled && productOption2Enabled' }
                    .form-group
                        %label {{ option2Field }}
                        %ui-select{ name: 'product_level_2', ng: { model: 'content_fee.product2', disabled: '!content_fee.product1 || productsByLevel(2).length == 0', required: true }, 'on-select': 'onChangeProduct($item, $model)' }
                            %ui-select-match{ placeholder: '{{ option1Field }}', 'allow-clear': 'true' }
                                {{ $select.selected.name }}
                            %ui-select-choices{ repeat: 'product.id as product in productsByLevel(2) | orderBy: "name" | filter: { name: $select.search }' }
                                %div{ ng: { bind: { html: 'product.name' } } }
                .col-xs-6
                    .form-group.product-budget{'ng-class': "{'with-add-btn': content_fee.isIncorrectTotalBudgetPercent}"}
                        %label Total Budget
                        %div.total-budget-wrap
                            %input.form-control.total-budget{'float-only': '', 'ng-model': 'content_fee.budget_loc', 'ng-change': 'changeTotalBudget()'}
                            %span.total-percent{'ng-class': "{'has-error': content_fee.isIncorrectTotalBudgetPercent}"}
                                {{(content_fee.budget_percent || 0 )+ '%'}}
                            %span.reset-budget.glyphicon.glyphicon-remove-circle{'ng-class': "{'has-error': content_fee.isIncorrectTotalBudgetPercent}", 'ng-click': 'resetAddProduct()'}
                .col-xs-12
                    .row.months.new-product-form
                        .col-xs-2{ ng: { repeat: 'month in content_fee.content_fee_product_budgets' } }
                            .form-group
                                %label {{content_fee.months[$index]}}
                                %input.form-control.offset-bottom{style: 'margin-bottom: 5px', 'ng-model': 'month.budget_loc',
                                    'ng-disabled': '!content_fee.budget_loc',
                                    'ng-change': 'changeMonthValue(month.budget_loc, $index)',
                                    'ng-focus': 'cutCurrencySymbol(month.budget_loc, $index)',
                                    'ng-blur': 'setCurrencySymbol(month.budget_loc, $index)',
                                    'float-only':''}
                                %input.form-control{ 'ng-model': 'month.percent_value',
                                    'ng-disabled': '!content_fee.budget_loc',
                                    'ng-change': 'changeMonthPercent(month.percent_value, $index)',
                                    'ng-focus': 'cutPercent(month.percent_value, $index)',
                                    'ng-blur': 'setPercent(month.percent_value, $index)',
                                    'float-only':''}
        .popup-modal-footer
            %button.btn.btn-default{'type': 'button', 'ng-click': 'cancel()'} Close
            %button.btn.btn-warning{'type': 'submit', 'ng-disabled': 'disableForm()'} Add Content Fee