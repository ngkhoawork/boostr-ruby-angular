#user_quota_modal.popup-modal
  %form{ ng: { submit: 'submitForm()' } }
    .popup-modal-header
      {{ formType }} Quota
      %span.close-btn{'ng-click': 'cancel()'}
    .popup-modal-body
      .form-group
        .row
          .col-xs-6{'ng-class':'{error: errors.time_period_id}'}
            %span.error-text {{errors.time_period_id}}
            %label{ for: 'time_period' }
              Time Period
              %span.star *
            %ui-select{ name: 'time_period', ng: { model: 'quota.time_period_id', disabled: true } }
              %ui-select-match{ placeholder: 'Time Period' }
                {{ $select.selected.name }}
              %ui-select-choices{ repeat: 'timePeriod.id as timePeriod in timePeriods | filter: { name: $select.search } | orderBy: ["start_date", "-end_date"]' }
                %div{ ng: { bind: { html: 'timePeriod.name' } } }
          .col-xs-6{'ng-class':'{error: errors.user_id}'}
            %span.error-text {{errors.user_id}}
            %label{ for: 'user' } 
              User
              %span.star *
            %ui-select{ name: 'user', ng: { model: 'quota.user_id', disabled: true } }
              %ui-select-match{ placeholder: 'User' }
                {{ $select.selected.name }}
              %ui-select-choices{ repeat: 'user.id as user in users | filter: { name: $select.search } | orderBy: "name"' }
                %div{ ng: { bind: { html: 'user.name' } } }

      .form-group
        .row
          .col-xs-6{'ng-class':'{error: errors.product_id}'}
            %span.error-text {{errors.product_id}}
            %label{ for: 'product' } Product
            %ui-select{ name: 'product', ng: { model: 'quota.product_id', disabled: true }, 'on-select': 'onSelectProduct()' }
              %ui-select-match{ placeholder: 'Product', 'allow-clear': 'true' }
                {{ $select.selected.name }}
              %ui-select-choices{ repeat: 'product.id as product in products | filter: { name: $select.search } | orderBy: "name"' }
                %div{ ng: { bind: { html: 'product.name' } } }
          .col-xs-6{'ng-class':'{error: errors.product_family_id}'}
            %span.error-text {{errors.product_family_id}}
            %label{ for: 'product_family' } Product Family
            %ui-select{ name: 'product_family', ng: { model: 'quota.product_family_id', disabled: true }, 'on-select': 'onSelectProductFamily()' }
              %ui-select-match{ placeholder: 'Product Family', 'allow-clear': 'true' }
                {{ $select.selected.name }}
              %ui-select-choices{ repeat: 'productFamily.id as productFamily in productFamilies | filter: { name: $select.search } | orderBy: "name"' }
                %div{ ng: { bind: { html: 'productFamily.name' } } }

      .form-group
        .row
          .col-xs-6{'ng-class':'{error: errors.value_type}'}
            %span.error-text {{errors.value_type}}
            %label{ for: 'type' } 
              Type
              %span.star *
            %ui-select{ name: 'type', ng: { model: 'quota.value_type', disabled: true } }
              %ui-select-match{ placeholder: 'Type' }
                {{ $select.selected | firstUppercase }}
              %ui-select-choices{ repeat: 'type as type in types' }
                %div{ ng: { bind: { html: 'type | firstUppercase' } } }
          .col-xs-6{'ng-class':'{error: errors.value}'}
            %span.error-text {{errors.value}}
            %label{ for: 'value' } 
              Quota
              %span.star *
            %input.form-control{ name: 'value', placeholder: 'Quota', ng: { model: 'quota.value' }, 'numbers-with-commas': true }

    .popup-modal-footer
      %button.btn.btn-default{'type': 'button', 'ng-click': 'cancel()'} Cancel
      %button.btn.btn-primary{ type: 'submit' } {{ submitText }}
