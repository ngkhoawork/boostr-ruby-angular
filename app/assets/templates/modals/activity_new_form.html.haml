#activity-form-modal.popup-modal
  %form{'ng-submit': 'submitForm()'}
    .popup-modal-header
      {{popupTitle}}
      %span.close-btn{'ng-click': 'cancel()'}
    .popup-modal-body
      .form-group{'ng-class':'{error: errors.type}'}
        %span.error-text {{errors.type}}
        %label
          Type of Activity
        .dropdown
          %button.btn.btn-primary.dropdown-toggle{'data-toggle': 'dropdown', type: 'button'}
            %i.activity-icon.fa{'class': '{{selectedType.css_class}}'}
            %span.text {{selectedType.name}}
            %span.caret
          %ul.dropdown-menu
            %li{'ng-repeat': 'type in types | orderBy : ["position", "name"]', }
              %a{'href': '', 'ng-click': 'selectType(type)'}
                %i.activity-icon.fa{'class': '{{type.css_class}}'}
                %span.text {{type.name}}
      %div{'ng-if': 'showRelated'}
        .form-group{'ng-class':'{error: errors.deal}'}
          %span.error-text {{errors.deal}}
          %label
            Related to Deal
          %input.form-control{'placeholder': 'Choose Deal', 'ng-model': 'form.deal', 'ng-model-options': '{debounce: 400}', typeahead: 'item as item.formatted_name for item in searchDeals($viewValue)', 'typeahead-on-select': 'onDealSelect($item, $model, $label, $event)'}

        .advertiser-agency
          .form-group.advertiser-field{'ng-class':'{error: errors.advertiser}'}
            %span.error-text {{errors.advertiser}}
            %label{style: 'display: block'}
              or Advertiser
            %input.form-control{'placeholder': 'Choose Advertiser', 'ng-model': 'form.advertiser', 'ng-model-options': '{debounce: 400}', typeahead: 'item as item.formatted_name for item in searchClients($viewValue, "advertiser")'}
          .form-group.agency-field{'ng-class':'{error: errors.agency}'}
            %span.error-text {{errors.agency}}
            %label{style: 'display: block'}
              or Agency
            %input.form-control{'placeholder': 'Choose Agency', 'ng-model': 'form.agency', 'ng-model-options': '{debounce: 400}', typeahead: 'item as item.formatted_name for item in searchClients($viewValue, "agency")'}
          %button.add-btn.plus-btn{type: 'button', 'ng-click': 'openAccountModal()'}

        .row
          .col-xs-6{'ng-if': 'isPublisherEnabled'}
            .form-group{'ng-class':'{error: errors.publisher}'}
              %span.error-text {{errors.publisher}}
              %label{style: 'display: block'}
                or Publisher
              %input.form-control{'placeholder': 'Choose Publisher', 'ng-model': 'form.publisher', 'ng-model-options': '{debounce: 400}', typeahead: 'item as item.name for item in searchPublishers($viewValue)'}

      %div{'ng-if': 'currentContact && !isEdit'}
        .activity-contact
          {{selectedType.action | firstUppercase}}
          %span {{currentContact.name}}
      %div{'ng-if': '!(currentContact && !isEdit)'}
        .form-group.with-add-btn{'ng-class':'{error: errors.contacts}'}
          %span.error-text {{errors.contacts}}
          %label
            {{selectedType.action | firstUppercase}}
            %span.star *

          .clearfix
          %ui-select{multiple: true, name: 'contacts', 'ng-model': 'form.contacts', disabled: true}
            %ui-select-match{placeholder: 'Choose Contact'}
              {{$item.name}}
            %ui-select-choices{repeat: 'contact.id as contact in contacts', refresh: 'searchContacts($select.search)', 'refresh-delay': '0'}
              %div{'ng-bind': {html: 'contact.name + " - " + contact.client.name'}}
          %button.add-btn.plus-btn{type: 'button', 'ng-click': 'openContactModal()'}
      .col-xs-6.date
        .form-group{'ng-class':'{error: errors.date}'}
          %span.error-text {{errors.date}}
          %label Date
          %span.star *
          .input-group
            %span.input-group-addon
              %i.fa.fa-calendar
            %span.bs-datepicker
              %input.form-control.box.w4{readonly: true, placeholder: 'Pick date', name: 'date', type: 'text', datepicker: { popup: 'MMMM d, y' }, ng: { model: 'form.date', required: true, click: 'dateOpened = true' }, 'is-open': 'dateOpened' }
      .col-xs-6.time
        .form-group
          %label Time
<<<<<<< HEAD
          %timepicker-pop.wrap-select-time.form-control-time{'input-time': 'form.time', 'show-meridian': 'showMeridian'}
=======
          %timepicker-pop.wrap-select-time.form-control-time{'input-time': 'form.time', 'show-meridian': 'showMeridian', disabled: 'true'}
>>>>>>> 8dcc5a970... fix activity templates;
      .form-group{'ng-class':'{error: errors.comment}'}
        %span.error-text {{errors.comment}}
        %label
          Comment
          %span.star *
        %textarea.form-control{'msd-elastic': '', 'placeholder': 'Type your update here', 'ng-model': 'form.comment'}
<<<<<<< HEAD

      .form-group{ng: {repeat: 'activityCustomField in customFieldNames | orderBy: "position"', init: "fieldName = activityCustomField.field_name", if: "!activityCustomField.disabled", class:'{error: errors[fieldName]}'}}
        %span.error-text {{errors[fieldName]}}
        %label{ for: '{{fieldName}}', ng: { if: "activityCustomField.field_type != 'sum'" } }
          {{activityCustomField.field_label}}
          %span.star{ 'ng-if': "activityCustomField.is_required == true" }
            *
        %input.form-control{ 'ng-if': "activityCustomField.field_type != 'number' && activityCustomField.field_type != 'note' && activityCustomField.field_type != 'datetime' && activityCustomField.field_type != 'boolean' && activityCustomField.field_type != 'dropdown' && activityCustomField.field_type != 'sum'", placeholder: 'Enter {{activityCustomField.field_label}}', ng: { model: 'form.activity_custom_field_obj[fieldName]' }, name: '{{fieldName}}' }
        %input.form-control{'ng-if': "activityCustomField.field_type == 'number'", 'msd-elastic': '', 'ng-model': "form.activity_custom_field_obj[fieldName]", name: "{{fieldName}}", placeholder: 'Enter {{activityCustomField.field_label}}', 'numbers-with-commas': true}
        %textarea.form-control{ 'ng-if': "activityCustomField.field_type == 'note'", 'msd-elastic': '', rows: 1, 'ng-model': "form.activity_custom_field_obj[fieldName]", name: "{{fieldName}}", placeholder: 'Enter {{activityCustomField.field_label}}' }
        .bs-datepicker
          %input.form-control{ 'ng-if': "activityCustomField.field_type == 'datetime'", readonly: true, name: '{{fieldName}}', type: 'text', datepicker: { popup: 'MMMM d, y' }, ng: { model: 'form.activity_custom_field_obj[fieldName]', required: true, click: 'dateOpened[fieldName] = true' }, 'is-open': 'dateOpened[fieldName]', placeholder: 'Choose {{activityCustomField.field_label}}' }
        .show-hide-remainder-form{ ng: { if: "activityCustomField.field_type == 'boolean' " } }
          .switch-remainder-form
            %input.cmn-toggle.cmn-toggle-round-flat{id: "{{fieldName}}", type: 'checkbox', 'ng-model': 'form.activity_custom_field_obj[fieldName]'}
            %label{:for => "{{fieldName}}"}
              %span
        %ui-select{ name: '{{fieldName}}', ng: { if: "activityCustomField.field_type == 'dropdown'", model: 'form.activity_custom_field_obj[fieldName]', disabled: true } }
          %ui-select-match{ placeholder: 'Select value' }
            {{ $select.selected.value }}
          %ui-select-choices{ repeat: 'customFieldOption.value as customFieldOption in activityCustomField.custom_field_options | filter: { value: $select.search }' }
            %div{ ng: { bind: { html: 'customFieldOption.value' } } }

=======
>>>>>>> 8dcc5a970... fix activity templates;

      .form-group{ng: {repeat: 'activityCustomField in customFieldNames | orderBy: "position"', init: "fieldName = activityCustomField.field_name", if: "!activityCustomField.disabled", class:'{error: errors[fieldName]}'}}
        %span.error-text {{errors[fieldName]}}
        %label{ for: '{{fieldName}}' }
          {{activityCustomField.field_label}}
          %span.star{ 'ng-if': "activityCustomField.is_required == true" }
            *
        %input.form-control{ 'ng-if': "activityCustomField.field_type != 'number' && activityCustomField.field_type != 'note' && activityCustomField.field_type != 'datetime' && activityCustomField.field_type != 'boolean' && activityCustomField.field_type != 'dropdown'", placeholder: 'Enter {{activityCustomField.field_label}}', ng: { model: 'form.activity_custom_field_obj[fieldName]' }, name: '{{fieldName}}' }
        %input.form-control{'ng-if': "activityCustomField.field_type == 'number'", 'msd-elastic': '', 'ng-model': "form.activity_custom_field_obj[fieldName]", name: "{{fieldName}}", placeholder: 'Enter {{activityCustomField.field_label}}', 'numbers-with-commas': true}
        %textarea.form-control{ 'ng-if': "activityCustomField.field_type == 'note'", 'msd-elastic': '', rows: 1, 'ng-model': "form.activity_custom_field_obj[fieldName]", name: "{{fieldName}}", placeholder: 'Enter {{activityCustomField.field_label}}' }
        .bs-datepicker
          %input.form-control{ 'ng-if': "activityCustomField.field_type == 'datetime'", readonly: true, name: '{{fieldName}}', type: 'text', datepicker: { popup: 'MMMM d, y' }, ng: { model: 'form.activity_custom_field_obj[fieldName]', required: true, click: 'dateOpened[fieldName] = true' }, 'is-open': 'dateOpened[fieldName]', placeholder: 'Choose {{activityCustomField.field_label}}' }
        .show-hide-remainder-form{ ng: { if: "activityCustomField.field_type == 'boolean' " } }
          .switch-remainder-form
            %input.cmn-toggle.cmn-toggle-round-flat{id: "{{fieldName}}", type: 'checkbox', 'ng-model': 'form.activity_custom_field_obj[fieldName]'}
            %label{:for => "{{fieldName}}"}
              %span
        %ui-select{ name: '{{fieldName}}', ng: { if: "activityCustomField.field_type == 'dropdown'", model: 'form.activity_custom_field_obj[fieldName]', disabled: true } }
          %ui-select-match{ placeholder: 'Select value' }
            {{ $select.selected.value }}
          %ui-select-choices{ repeat: 'customFieldOption.value as customFieldOption in activityCustomField.custom_field_options | filter: { value: $select.search }' }
            %div{ ng: { bind: { html: 'customFieldOption.value' } } }


    .popup-modal-separate-line
    .popup-modal-subtitle
      .show-hide-remainder-form
        %span.title-remainder Remind to follow up
        .switch-remainder-form
          %input#rem-act-modal-toggle.cmn-toggle.cmn-toggle-round-flat{type: 'checkbox', 'ng-model': 'showReminderForm'}
          %label{:for => "rem-act-modal-toggle"}
            %span
    .reminder-form{'ng-show': 'showReminderForm'}
      .form-group{'ng-class':'{error: errors.reminderName}'}
        %span.error-text {{errors.reminderName}}
        %label
          Reminder name
          %span.star *
        %input.form-control{'ng-model': 'form.reminderName'}
      .col-xs-6.date
        .form-group{'ng-class':'{error: errors.reminderDate}'}
          %span.error-text {{errors.reminderDate}}
          %label Date
          %span.star *
          .input-group
            %span.input-group-addon
              %i.fa.fa-calendar
            %span.bs-datepicker
              %input.form-control.box.w4{readonly: true, placeholder: 'Pick date', name: 'reminderDate', type: 'text', datepicker: { popup: 'MMMM d, y' }, ng: { model: 'form.reminderDate', required: true, click: 'reminderDateOpened = true' }, 'is-open': 'reminderDateOpened' }
      .col-xs-6.time
        .form-group
          %label Time
          %timepicker-pop.wrap-select-time.form-control-time{'input-time': 'form.reminderTime', 'show-meridian': 'showMeridian'}
      .form-group{'ng-class':'{error: errors.reminderComment}'}
        %span.error-text {{errors.reminderComment}}
        %label
          Reminder note
          %span.star *
        %textarea.form-control{'msd-elastic': '', 'ng-model': 'form.reminderComment'}

    .popup-modal-footer
      %button.btn.btn-default{'type': 'button', 'ng-click': 'cancel()'} Cancel
      %button.btn.btn-warning{'type': 'submit'} {{submitButtonText}}