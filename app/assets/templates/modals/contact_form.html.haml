#contact_modal.popup-modal
  %form{ ng: { submit: 'submitForm()' } }
    .popup-modal-header
      {{ formType }} Contact
      %span.close-btn{'ng-click': 'cancel()'} +
    .popup-modal-body
      .alerts{ 'ng-repeat': '(field, fieldErrors) in responseErrors' }
        .alert.alert-danger{ 'ng-repeat': 'error in fieldErrors' }
          %i.fa.fa-warning
          <strong style="text-transform: capitalize">{{field}}</strong>
          {{error}}

      .form-group{'ng-class':'{error: errors.name}'}
        %span.error-text {{errors.name}}
        %label{ for: 'name' } Name
        %span.star *
        %input.form-control{ name: 'name', placeholder: 'Name', ng: { model: 'contact.name' } }
      .form-group{'ng-class':'{error: errors.client_id}'}
        %span.error-text {{errors.client_id}}
        %label{ for: 'client' } Primary Account
        %span.star *
        %ui-select{ name: 'client', ng: { model: 'contact.client_id', disabled: true, keyup: 'searchClients($select.search)' } }
          %ui-select-match{ placeholder: 'Select An Account', "allow-clear": 'true' }
            {{ $select.selected.name || contact.primary_client_json.name }}
          %ui-select-choices{ repeat: 'client.id as client in clients | filter: { name: $select.search }' }
            %div{ ng: { bind: { html: 'client.name' } } }
      .form-group{'ng-class':'{error: errors.email}'}
        %span.error-text {{errors.email}}
        %label{ for: 'email' } Email
        %span.star *
        %input#email.form-control{ name: 'email', placeholder: 'Email', ng: { model: 'contact.address.email' } }
      .row
        .col-sm-6
          .form-group{ style: 'margin-right: 0' }
            %label{ for: 'mobile' } Mobile
            %input.form-control{ name: 'mobile', placeholder: 'Mobile Number', ng: { model: 'contact.address.mobile' } }
        .col-sm-6
          .form-group{ style: 'margin-left: 0' }
            %label{ for: 'office' } Office
            %input.form-control{ name: 'office', placeholder: 'Office Number', ng: { model: 'contact.address.phone' } }
      .form-group
        %label{ for: 'position' } Position
        %input.form-control{ name: 'position', placeholder: 'Position', ng: { model: 'contact.position' } }
      .form-group
        %label{ for: 'note' } Note
        %textarea.form-control{'msd-elastic': '', name: 'note', placeholder: 'Type your note here', ng: { model: 'contact.note' } }
      .form-group.text-center{'ng-hide': 'showAddressFields'}
        %a.btn.add-btn{ 'ng-click': 'showAddressFields = true'}
          %i.fa.fa-plus
          Add Address
      %div{ 'ng-show': 'showAddressFields' }
        .form-group
          %label{ for: 'street1' } Address
          %input.form-control{ name: 'street1', placeholder: 'Address', ng: { model: 'contact.address.street1' } }
        .form-group
          .row
            .col-xs-5
              %label{ for: 'city' } City
              %input.form-control{ name: 'city', placeholder: 'City', ng: { model: 'contact.address.city' }  }
            .col-xs-4.fat
              %label{ for: 'state' } State
              %ui-select.bo-state-select{ name: 'state', ng: { model: 'contact.address.state', disabled: true } }
                %ui-select-match{ placeholder: 'State' }
                  {{ $select.selected.name }}
                %ui-select-choices{ repeat: 'state.abbreviation as state in states | filter: { name: $select.search }' }
                  %div{ ng: { bind: { html: 'state.name' } } }
            .col-xs-3
              %label{ for: 'zip' } Postal
              %input.form-control{ name: 'zip', placeholder: 'Zip', ng: { model: 'contact.address.zip' }  }
        .form-group
          %label{ for: 'country' } Country
          %ui-select{ name: 'country', ng: { model: 'contact.address.country', disabled: true } }
            %ui-select-match{ placeholder: 'Country' }
              {{ $select.selected }}
            %ui-select-choices{ repeat: 'country in countries | filter: $select.search' }
              %div {{ country }}

    .popup-modal-footer
      %button.btn.btn-default{'type': 'button', 'ng-click': 'cancel()'} Cancel
      %button.btn.btn-primary{ type: 'submit', ng: { disabled: 'buttonDisabled' } } {{ submitText }}
