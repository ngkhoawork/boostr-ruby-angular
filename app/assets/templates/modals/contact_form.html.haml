#contact_modal
  %form.form-horizontal{ ng: { submit: 'submitForm()' } }
    .modal-header.text-center
      %a.close{ ng: { click: 'cancel()' } }
        %span{'aria-hidden' => 'true'}
          = inline_svg 'icons/close.svg'
      %h3.modal-title
        %strong
          {{ formType }} Person
    .modal-body
      .alerts{ 'ng-repeat': '(field, fieldErrors) in errors' }
        .alert.alert-danger{ 'ng-repeat': 'error in fieldErrors' }
          %i.fa.fa-warning
          <strong style="text-transform: capitalize">{{field}}</strong>
          {{error}}

      .form-group
        %label.control-label{ for: 'name' } Name*
        %input.form-control{ name: 'name', placeholder: 'Name', ng: { model: 'contact.name' } }
      .form-group
        .row
          .col-xs-12
            %label.control-label{ for: 'client' } Primary Client*
            %ui-select{ name: 'client', ng: { model: 'contact.client_id', disabled: true } }
              %ui-select-match{ placeholder: 'Select A Client' }
                {{ $select.selected.name }}
              %ui-select-choices{ repeat: 'client.id as client in clients | filter: { name: $select.search }' }
                %div{ ng: { bind: { html: 'client.name' } } }
      .form-group
        %label.control-label{ for: 'email' } Email*
        %input#email.form-control{ name: 'email', placeholder: 'Email', ng: { model: 'contact.address.email' } }
      .row
        .col-sm-6
          .form-group{ style: 'margin-right: 0' }
            %label.control-label{ for: 'mobile' } Mobile
            %input.form-control{ name: 'mobile', placeholder: 'Mobile Number', ng: { model: 'contact.address.mobile' } }
        .col-sm-6
          .form-group{ style: 'margin-left: 0' }
            %label.control-label{ for: 'office' } Office
            %input.form-control{ name: 'office', placeholder: 'Office Number', ng: { model: 'contact.address.phone' } }
      .form-group
        %label.control-label{ for: 'position' } Position
        %input.form-control{ name: 'position', placeholder: 'Position', ng: { model: 'contact.position' } }
      .form-group
        %label.control-label{ for: 'note' } Note
        %textarea.form-control{:cols => "30", :name => "note", :rows => '2', placeholder: 'Type your note here', ng: { model: 'contact.note' } }
      .form-group.text-center
        %a.btn.btn-default.add-address-btn{ 'ng-click': 'showAddressFields = 1', 'ng-hide': 'showAddressFields' }
          %i.fa.fa-plus-circle
          Add Address
      %div{ 'ng-show': 'showAddressFields || contact.address.street1 || contact.address.city || contact.address.state || contact.address.zip' }
        .form-group
          %label.control-label{ for: 'street1' } Address
          %input.form-control{ name: 'street1', placeholder: 'Address', ng: { model: 'contact.address.street1' } }
        .form-group
          .row
            .col-xs-5
              %label.control-label{ for: 'city' } City
              %input.form-control{ name: 'city', placeholder: 'City', ng: { model: 'contact.address.city' }  }
            .col-xs-4.fat
              %label.control-label{ for: 'state' } State
              %ui-select.bo-state-select{ name: 'state', ng: { model: 'contact.address.state', disabled: true } }
                %ui-select-match{ placeholder: 'State' }
                  {{ $select.selected.name }}
                %ui-select-choices{ repeat: 'state.abbreviation as state in states | filter: { name: $select.search }' }
                  %div{ ng: { bind: { html: 'state.name' } } }
            .col-xs-3
              %label.control-label{ for: 'zip' } Zip
              %input.form-control{ name: 'zip', placeholder: 'Zip', ng: { model: 'contact.address.zip' }  }

    .modal-footer
      %button.btn.btn-primary.btn-lg{ type: 'submit', ng: { disabled: 'buttonDisabled' } } {{ submitText }}
      %a.btn.btn-default.btn-lg{ ng: { click: 'cancel()' } } Cancel
