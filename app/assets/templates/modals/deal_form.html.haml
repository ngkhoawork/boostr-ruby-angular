#deal_modal.popup-modal
    %form{ ng: { submit: 'submitForm()' } }
        .popup-modal-header
            {{formType}} Deal
            %span.close-btn{'ng-click': 'cancel()'}
        .popup-modal-body
            .alerts{ 'ng-repeat': '(field, fieldErrors) in responseErrors' }
                .alert.alert-danger{ 'ng-repeat': 'error in fieldErrors' }
                    %i.fa.fa-warning
                    <strong style="text-transform: capitalize">{{field}}</strong>
                    {{error}}
            .form-group{'ng-class':'{error: errors.name}'}
                %span.error-text {{errors.name}}
                %label{ for: 'name' }
                    Name
                    %span.star *
                %input.form-control{ placeholder: 'Name', ng: { model: 'deal.name', required: true }, name: 'name' }

            .form-group{'ng-class': '{error: errors.sales_process_id}', 'ng-if': '!team'}
                .row
                    .col-xs-12
                        %span.error-text {{errors.sales_process_id}}
                        %label{ for: 'sales_process' }
                            Sales Process
                            %span.star *
                        %ui-select{ name: 'sales_process', ng: { model: 'deal.sales_process_id', required: true, change: 'onChangeSalesProcess(deal.sales_process_id)' } }
                            %ui-select-match{ placeholder: 'Sales Process' }
                                {{ $select.selected.name }}
                            %ui-select-choices{ repeat: 'salesProcess.id as salesProcess in salesProcesses | filter: { name: $select.search }' }
                                %div{ ng: { bind: { html: 'salesProcess.name' } } }                    

            .form-group{'ng-class':'{error: errors.stage_id}'}
                .row
                    .col-xs-6
                        %span.error-text {{errors.stage_id}}
                        %label{ for: 'stage' }
                            Stage
                            %span.star *
                        %ui-select{ name: 'stage', ng: { model: 'deal.stage_id', required: true } }
                            %ui-select-match{ placeholder: 'Stage' }
                                {{ $select.selected.name+" "+$select.selected.probability+"%" }}
                            %ui-select-choices{ repeat: 'stage.id as stage in stages | filter: { name: $select.search }' }
                                %div{ ng: { bind: { html: 'stage.name+" "+stage.probability+"%"' } } }
                    .col-xs-6
                        %span.error-text {{errors.curr_cd}}
                        %label{ for: 'currency' }
                            Deal Currency
                        %ui-select{ name: 'currency', ng: { model: 'deal.curr_cd', required: true } }
                            %ui-select-match
                                {{ $select.selected.name }}
                            %ui-select-choices{ repeat: 'currency.curr_cd as currency in currencies' }
                                %div{ ng: { bind: { html: 'currency.name' } } }
            .advertiser-agency
                .form-group.advertiser-field{'ng-class':'{error: errors.advertiser_id}'}
                    %span.error-text {{errors.advertiser_id}}
                    %label{style: 'display: block'}
                        Advertiser
                        %span.star *
                    %ui-select{ name: 'advertiser', ng: { if: '!availableAdvertisers.length', model: 'deal.advertiser_id', disabled: true, keyup: 'searchClients($select.search, Advertiser)' }, 'on-select': "advertiserSelected($model)" }
                        %ui-select-match{ placeholder: 'Advertiser' }
                            {{ $select.selected.name }}
                        %ui-select-choices{ repeat: 'advertiser.id as advertiser in advertisers' }
                            %div{ ng: { bind: { html: 'advertiser.name' } } }

                    %ui-select{ name: 'advertiser', ng: { if: 'availableAdvertisers.length', model: 'deal.advertiser_id', disabled: true }, 'on-select': "advertiserSelected($model)" }
                        %ui-select-match{ placeholder: 'Advertiser' }
                            {{ $select.selected.name }}
                        %ui-select-choices{ repeat: 'advertiser.id as advertiser in availableAdvertisers | filter: { name: $select.search }' }
                            %div{ ng: { bind: { html: 'advertiser.name' } } }        
                .form-group.agency-field{'ng-class':'{error: errors.agency_id}'}
                    %span.error-text {{errors.agency_id}}
                    %label{style: 'display: block'}
                        Agency
                        %span.star{ 'ng-if': "availableAgencies.length" } *
                    %ui-select{ name: 'agency', ng: { if: '!availableAgencies.length', model: 'deal.agency_id', disabled: true, keyup: 'searchClients($select.search, Agency)' }, 'on-select': 'agencySelected($model)' }
                        %ui-select-match{ placeholder: 'Agency' }
                            {{ $select.selected.name }}
                        %ui-select-choices{ repeat: 'agency.id as agency in agencies' }
                            %div{ ng: { bind: { html: 'agency.name' } } }
                    
                    %ui-select{ name: 'agency', ng: { if: 'availableAgencies.length', model: 'deal.agency_id', disabled: true }, 'on-select': 'agencySelected($model)' }
                        %ui-select-match{ placeholder: 'Agency' }
                            {{ $select.selected.name }}
                        %ui-select-choices{ repeat: 'agency.id as agency in availableAgencies | filter: { name: $select.search }' }
                            %div{ ng: { bind: { html: 'agency.name' } } }
                %button.add-btn.plus-btn{type: 'button', 'ng-click': 'createNewClientModal()'}
            .form-group
                .row
                    .col-xs-6{'ng-class':'{error: errors.deal_type_value}'}
                        %span.error-text {{errors.deal_type_value}}
                        %label{ for: 'deal-type' }
                            Type
                            %span.star{ 'ng-if': "baseFieldRequired('deal_type_value')" } *
                        %ui-select{ name: 'deal-type', ng: { model: 'deal.deal_type.option_id', disabled: true } }
                            %ui-select-match{ placeholder: 'Type' }
                                {{ $select.selected.name }}
                            %ui-select-choices{ repeat: 'option.id as option in deal.deal_type.options | filter: { name: $select.search }' }
                                %div{ ng: { bind: { html: 'option.name' } } }
                    .col-xs-6{'ng-class':'{error: errors.deal_source_value}'}
                        %span.error-text {{errors.deal_source_value}}
                        %label{ for: 'source-type' }
                            Source
                            %span.star{ 'ng-if': "baseFieldRequired('deal_source_value')" } *
                        %ui-select{ name: 'source-type', ng: { model: 'deal.source_type.option_id', disabled: true } }
                            %ui-select-match{ placeholder: 'Source' }
                                {{ $select.selected.name }}
                            %ui-select-choices{ repeat: 'option.id as option in deal.source_type.options | filter: { name: $select.search }' }
                                %div{ ng: { bind: { html: 'option.name' } } }

            .form-group{'ng-class':'{error: errors.next_steps}'}
                %span.error-text {{errors.next_steps}}
                %label{ for: 'next-steps' }
                    Next Steps
                    %span.star{ 'ng-if': "baseFieldRequired('next_steps')" } *
                %input.form-control{ placeholder: 'Next Steps', ng: { model: 'deal.next_steps' }, name: 'next-steps' }

            %div{ ng: {if: "formType == 'New'"}}
                .row
                    .form-group.col-md-6.bs-datepicker{'ng-class':'{error: errors.start_date}'}
                        %span.error-text {{errors.start_date}}
                        %label{ for: 'start-date' }
                            Start Date
                            %span.star *
                        %input.form-control{readonly: true, name: 'start-date', type: 'text', datepicker: { popup: 'MMMM d, y', timezone: true }, ng: { model: 'deal.start_date', required: true, click: 'startOpened = true' }, 'is-open': 'startOpened', 'max-date': 'dateRestrictions.max_start_date', placeholder: "{{ dateRestrictions.max_start_date_formated }}" }

                    .form-group.col-md-6.bs-datepicker{'ng-class':'{error: errors.end_date}'}
                        %span.error-text {{errors.end_date}}
                        %label{ for: 'end-date' }
                            End Date
                            %span.star *
                        %input.form-control{readonly: true, name: 'end-date', type: 'text', datepicker: { popup: 'MMMM d, y', timezone: true }, ng: { model: 'deal.end_date', required: true, click: 'endOpened = true' }, 'is-open': 'endOpened', 'min-date': 'dateRestrictions.min_end_date', placeholder: "{{ dateRestrictions.min_end_date_formated }}" }
            .form-group{ng: {repeat: 'dealCustomFieldName in dealCustomFieldNames | orderBy: "position"', init: "fieldName = dealCustomFieldName.field_type + dealCustomFieldName.field_index", if: "dealCustomFieldName.show_on_modal && !dealCustomFieldName.disabled", class:'{error: errors[fieldName]}'}}
                %span.error-text {{errors[fieldName]}}
                %label{ for: '{{fieldName}}', ng: { if: "dealCustomFieldName.field_type != 'sum'" } }
                    {{dealCustomFieldName.field_label}}
                    %span.star{ 'ng-if': "dealCustomFieldName.is_required == true" }
                        *
                %input.form-control{ 'ng-if': "dealCustomFieldName.field_type != 'note' && dealCustomFieldName.field_type != 'datetime' && dealCustomFieldName.field_type != 'boolean' && dealCustomFieldName.field_type != 'dropdown' && dealCustomFieldName.field_type != 'sum'", placeholder: 'Enter {{dealCustomFieldName.field_label}}', ng: { model: 'deal.deal_custom_field[fieldName]' }, name: '{{fieldName}}' }
                %textarea.form-control{ 'ng-if': "dealCustomFieldName.field_type == 'note'", 'msd-elastic': '', rows: 1, 'ng-model': "deal.deal_custom_field[fieldName]", name: "{{fieldName}}", placeholder: 'Enter {{dealCustomFieldName.field_label}}' }
                .bs-datepicker
                    %input.form-control{ 'ng-if': "dealCustomFieldName.field_type == 'datetime'", readonly: true, name: '{{fieldName}}', type: 'text', datepicker: { popup: 'MMMM d, y' }, ng: { model: 'deal.deal_custom_field[fieldName]', required: true, click: 'dateOpened[fieldName] = true' }, 'is-open': 'dateOpened[fieldName]', placeholder: 'Choose {{dealCustomFieldName.field_label}}' }
                .show-hide-remainder-form{ ng: { if: "dealCustomFieldName.field_type == 'boolean' " } }
                    .switch-remainder-form
                        %input.cmn-toggle.cmn-toggle-round-flat{id: "{{fieldName}}", type: 'checkbox', 'ng-model': 'deal.deal_custom_field[fieldName]'}
                        %label{:for => "{{fieldName}}"}
                            %span
                %ui-select{ name: '{{fieldName}}', ng: { if: "dealCustomFieldName.field_type == 'dropdown'", model: 'deal.deal_custom_field[fieldName]', disabled: true } }
                    %ui-select-match{ placeholder: 'Select value' }
                        {{ $select.selected.value }}
                    %ui-select-choices{ repeat: 'customFieldOption.value as customFieldOption in dealCustomFieldName.deal_custom_field_options | filter: { value: $select.search }' }
                        %div{ ng: { bind: { html: 'customFieldOption.value' } } }
        .popup-modal-footer
            %button.btn.btn-default{'type': 'button', 'ng-click': 'cancel()'} Cancel
            %button.btn.btn-primary{ type: 'submit', ng: { disabled: 'buttonDisabled' } } {{ submitText }}
