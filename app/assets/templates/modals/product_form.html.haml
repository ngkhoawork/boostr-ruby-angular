#product-modal.popup-modal
  %form{ ng: { submit: 'submitForm()' } }
    .popup-modal-header.text-center
      {{ formType }} Product
      %span.close-btn{'ng-click': 'cancel()'}
    .popup-modal-body
      .form-group{ ng: { class:'{error: errors.name}'} }
        %span.error-text {{errors.name}}
        %label{ for: 'name' } Name
        %span.star *
        %input.form-control{ placeholder: 'Name', ng: { model: 'product.name', change: 'updateFullName()' }, name: 'name' }

      .form-group{ ng: { class:'{error: errors.full_name}'} }
        %span.error-text {{errors.full_name}}
        %label{ for: 'full_name' } Full Name
        %input.form-control{ placeholder: 'Full Name', ng: { model: 'product.full_name', disabled: 'true' }, name: 'full_name' }

      .form-group
        %label{ for: 'family' } Family
        %ui-select{ name: 'family', ng: { model: 'product.product_family_id' } }
          %ui-select-match{ placeholder: 'Family' }
            {{ $select.selected.name }}
          %ui-select-choices{ repeat: 'option.id as option in productFamilies | filter: { name: $select.search }' }
            %div{ ng: { bind: { html: 'option.name' } } }

      .form-group{ 'ng-if': 'product_options_enabled && product_option1_enabled' }
        %label{ for: 'parent_id' } Parent Product
        %ui-select{ name: 'parent_id', ng: { model: 'product.parent_id', change: 'updateFullName()' } }
          %ui-select-match{ placeholder: 'Parent Product', 'allow-clear': 'true' }
            {{ $select.selected.path }}
          %ui-select-choices{ repeat: 'product.id as product in products | filter: { name: $select.search } | orderBy: "name"' }
            %div{ ng: { bind: { html: 'product.path' } } }

      .form-group
        %label{ for: 'pricing-type' } Pricing Type
        %ui-select{ name: 'pricing-type', ng: { model: 'product.pricing_type.option_id'} }
          %ui-select-match{ placeholder: 'Family' }
            {{ $select.selected.name }}
          %ui-select-choices{ repeat: 'option.id as option in product.pricing_type.options | filter: { name: $select.search }' }
            %div{ ng: { bind: { html: 'option.name' } } }

      .form-group{ ng: { class:'{error: errors.revenue_type}'} }
        %span.error-text {{errors.revenue_type}}
        %label{ for: 'revenue-type' }
          Revenue Type
          %span.star *
        %ui-select{ name: 'revenue-type', ng: { model: 'product.revenue_type' } }
          %ui-select-match{ placeholder: 'Revenue Type' }
            {{ $select.selected }}
          %ui-select-choices{ repeat: 'revenueType in revenueTypes' }
            %div{ ng: { bind: { html: 'revenueType' } } }

      .form-group{ ng: { class:'{error: errors.margin}'} }
        %span.error-text {{errors.margin}}
        %label{ for: 'margin' } Margin
        %input.form-control{ placeholder: 'Margin', ng: { model: 'product.margin' }, name: 'margin', 'numbers-only': '' }

      .form-group
        %label{ for: 'active' } Active
        .show-hide-remainder-form
          .switch-remainder-form
            %input#rem-act-modal-toggle.cmn-toggle.cmn-toggle-round-flat{type: 'checkbox', 'ng-model': 'product.active'}
            %label{:for => "rem-act-modal-toggle"}
              %span

      .form-group
        %label{ for: 'is_influencer_product' } Is Influencer Product
        .show-hide-remainder-form
          .switch-remainder-form
            %input#rem-act-modal-toggle1.cmn-toggle.cmn-toggle-round-flat{type: 'checkbox', 'ng-model': 'product.is_influencer_product'}
            %label{:for => "rem-act-modal-toggle1"}
              %span

    .popup-modal-footer.text-center
      %button.btn.btn-default{'type': 'button', 'ng-click': 'cancel()'} Cancel
      %button.btn.btn-primary{ type: 'submit' } {{ submitText }}
