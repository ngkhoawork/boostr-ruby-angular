#reminders-list.panel-group

  .panel.panel-default.item-reminders{ng: { repeat: 'reminder in reminders' } }

    .panel-heading.hide-detailse-wrap
      .checkbox-wrapper
        //%input{ type: 'checkbox', ng: { model: 'reminder.completed', click: 'saveCurReminder(reminder)' } }
        %label
          %input.checkbox{:checked => "checked", :name => "checkbox-test", :type => "checkbox", ng: { model: 'reminder.completed', click: 'saveReminder(reminder)' }}/
          %span.checkbox-custom
          %span.label
      .text-wrap
        %br{ ng: {show: 'collapsed'} }
        %p {{ reminder.remindable_type }} - {{ reminder.remindable.name }}
        %p.name{ ng: {hide: 'collapsed'} } {{ reminder.name }}
        %p{ ng: {hide: 'collapsed', class: 'reminder.dateColorClass'} } {{ reminder.remind_on | date:'medium' }}

      .btn-wrap
        %label.trigger-click{"ng-click" => "editShow = !editShow", "ng-show" => "!editShow"}
          = inline_svg 'icons/hide-details.svg'
        %label.trigger-click{"ng-click" => "editShow = !editShow", "ng-show" => "editShow"}
          = inline_svg 'icons/show-details.svg'

    .panel-collapse.collapse.in
      -#.panel-body.details{ ng: {show: 'collapsed'} }
      -#  %div
      -#    %p.due
      -#      due:
      -#    %p.date{ ng: { class: 'reminder.dateColorClass' } }
      -#      {{ reminder.remind_on | date:'medium' }}
      -#  -# в зависимости от даты, нужно красить в разный цвет - сегодня .red  - завтра .yellow - после завтра и дальше - .silver
      -#  %div
      -#    %p.person
      -#      Name:
      -#    %p.name
      -#      {{ reminder.name }}
      -#  %div
      -#    %p.note
      -#      Note:
      -#    %p.description
      -#      {{ reminder.comment }}
      -#  %div.edit-delete-wrap
      -#    %a.btn.edit-reminder{ng: { click: 'editShow=true' } } edit
      -#    -# тут на клик нужно будет скрыть блок .panel-body.details, а показать блок - .panel-body.details.details-edit
      -#    %a.btn.delete-reminder{ng: { click: 'deleteCurReminder(reminder)' } } delete
      .panel-body.details.details-edit{ ng: {show: 'editShow'}}
        %div.edit-section-wrapper
          %div
            %p.due
              Due:
            %p.bs-datepicker
              %span{ datepicker: { popup: 'MMMM d, y' }, ng: { model: 'reminder._date', required: true, click: 'callDateOpened = true', class: '{ editing: callDateOpened }', change: 'saveCurReminder(reminder)' }, 'is-open': 'callDateOpened' }
                {{ reminder._date | date: 'MMM d, y' }}
          %div
            %p.due
              Time:
            %timepicker-pop.time-edit.spec{"input-time" => "reminder._time", "show-meridian" => "showMeridian", 'enter-press': 'saveCurReminder(reminder)' }
          -#%div
          -#  %p.due
          -#    Time again:
          -#  %p
          -#    %span{ "timepicker" => "", "show-spinners": "reminder.showSpinners", ng: { model: 'reminder._time', click: 'showSpinners(reminder)', required: true, change: 'saveCurReminder(reminder)' } }
          -#    %span
          -#      {{ reminder._time | date: 'hh:mm' }}
          %div
            %p.person
              Name:
            %input.title.editable-control{ type: 'text', 'ng-model': 'reminder.name', placeholder: "Enter option", 'ng-blur': 'saveCurReminder(reminder)' }
            -#%span{type:'text', name:'edit-name', editable: { text: 'reminder.name' }, onaftersave: 'saveCurReminder(reminder)' }
            -#  {{ reminder.name }}
          %div.edit-description-wrap
            %p.note
              note:
            %input.title.editable-control{ type: 'text', 'ng-model': 'reminder.comment', placeholder: "Enter option", 'ng-blur': 'saveCurReminder(reminder)' }
            -#%span{ name:'edit-description', editable: { textarea: 'reminder.comment' }, onaftersave: 'saveCurReminder(reminder)' }
            -#  {{ reminder.comment }}
          %div.action-wrap
            -#%a.btn.cancel-edited-reminder{ng: { click: 'editShow=false' } } cancel
            %a.btn.cancel-edited-reminder{ng: { click: 'deleteCurReminder(reminder)' } } delete
            -#%a.btn.save-edited-reminder{ng: { click: 'saveCurReminder(reminder)' } } save

  %div.completed-reminders-section{ng: { click: 'showCompleted=!showCompleted' } }
    %span
      View Completed

    .completed-reminders.completed-reminders{ng: { show: 'showCompleted', repeat: 'completedReminder in completedReminders' } }
      %div.main-wrap
        %div.completed-reminder
          %label
            -#%input{ type: 'checkbox', ng: { model: 'completedReminder.completed', click: 'saveCurReminder(completedReminder)' } }
            %input.checkbox{:checked => "checked", :name => "checkbox-test", :type => "checkbox", ng: { model: 'completedReminder.completed', click: 'saveReminder(completedReminder)' }}/
            %span.checkbox-custom.glyphicon.glyphicon-ok
            %span.label
          %span.completed-name.left
            {{ completedReminder.name }}
          %span.completed-date
            -# обрати внимание, дата в коротком виде
            {{ completedReminder.remind_on | date:'medium' }}
