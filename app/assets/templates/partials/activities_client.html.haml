#activities
  %form{ name: 'activityForm', ng: { submit: 'submitForm()' } }
    .alerts{ 'ng-repeat': '(field, fieldErrors) in errors' }
      .alert.alert-danger{ 'ng-repeat': 'error in fieldErrors' }
        %i.fa.fa-warning
        <strong style="text-transform: capitalize">{{field}}</strong>
        {{error}}
    #note
      %textarea.box.w1{:cols => "30", :name => "reply", :rows => '2', placeholder: 'Type your update here *', ng: { model: 'activity.comment' } }
    #nav.transparent
      %ul.nav.nav-tabs
        %li{ ng: { class: "{ active: showExtendedActivityForm }" } }
          %a.link{ href: '', ng: { click: 'showExtendedActivityForm = true' } }
            = inline_svg 'icons/message.svg'
        %li.pull-right
          %button.btn.btn-primary.btn-block{ type: 'submit' } Post Update

    #contain.tab{ ng: { show: 'showExtendedActivityForm' } }
      .row
        %a.close{ ng: { click: 'cancelActivity()' } }
          %span{'aria-hidden' => 'true'}
            = inline_svg 'icons/close.svg'
      .row
        .col-xs-4
          .list-group.list-sm.stages
            %a.list-group-item.vertical-center.type-menu{ href: '', ng: { repeat: 'type in types', click: 'activity.activity_type_id = type.id; activity.activity_type_name = type.name', class: '{ active: activity.activity_type_id == type.id }' } }
              %img.s-img{:src => "{{ type.icon }}"}/
              %h5
                {{ type.name }}
        .col-xs-6
          #contain1{ ng: { repeat: 'type in types', show: 'activity.activity_type_id == type.id' } }
            .row.type1
              %a#add-contact{ href: '', ng: { click: 'createNewContactModal()' } }
                = inline_svg 'icons/add.svg'
              {{ type.action }}*
              %br
              %ui-select{ multiple: true, name: 'contacts', ng: { model: 'activity.contacts', disabled: true } }
                %ui-select-match{ placeholder: "Type a name *" }
                  {{ $item.name }}
                %ui-select-choices{ repeat: 'contact.id as contact in contacts | filter: { name: $select.search }' }
                  %div{ 'ng-bind-html': 'contact.name' } } }
            .row.type2
              Date
              %br
              %span.bs-datepicker
                %input.box.w4{ name: 'date', type: 'text', datepicker: { popup: 'MMMM d, y' }, ng: { model: 'activity.date', required: true, click: 'callDateOpened = true' }, 'is-open': 'callDateOpened' }
            .row.type2
              Time
              %timepicker-pop.input-group{"input-time" => "activity.time", "show-meridian" => "showMeridian"}
