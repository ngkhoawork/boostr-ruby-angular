#activities
  %form{ name: 'activity_form', ng: { submit: 'submitForm(activity_form)' } }
    .alerts{ 'ng-repeat': '(field, fieldErrors) in errors' }
      .alert.alert-danger{ 'ng-repeat': 'error in fieldErrors' }
        %i.fa.fa-warning
        <strong style="text-transform: capitalize">{{field}}</strong>
        {{error}}
    #note
      %textarea.box.w1{:cols => "30", :name => "reply", :rows => '2', placeholder: 'Type your update here', ng: { model: 'activity.comment' } }
    #nav.transparent
      %ul.nav.nav-tabs
        %li{ ng: { class: "{ active: activeTab == 'Type' }" } }
          %a.link{ href: '', ng: { click: "setActiveTab('Type'); getContacts()" } }
            = inline_svg 'icons/message.svg'
        %li.pull-right
          %button.btn.btn-primary.btn-block{ type: 'submit' } Post Update

    #contain.tab{ ng: { show: 'activeTab == "Type"' } }
      .row
        %a.close{ ng: { click: 'cancelActivity()' } }
          %span{'aria-hidden' => 'true'}
            = inline_svg 'icons/close.svg'
      .row
        .col-xs-4.pad7
          .list-group.list-sm.stages
            %a.list-group-item.vertical-center.type-menu{ href: '', ng: { repeat: 'type in types', click: 'setActiveType(type)', class: '{ active: activeType == type }' } }
              %img.s-img{:src => "{{ type.icon }}"}/
              %h5
                {{ type.name }}
        .col-xs-6.add-remainder-form-wrap
          #contain1{ ng: { repeat: 'type in types', show: 'activeType == type' } }
            .row.type1
              %a#add-contact{ href: '', ng: { click: 'createNewContactModal()' } }
                = inline_svg 'icons/add.svg'
              {{ type.action }}*
              %br
              %ui-select{ multiple: true, name: 'contacts', ng: { model: 'selected[type.name].contacts', disabled: true } }
                %ui-select-match{ placeholder: "Type a name" }
                  {{ $item.name }}
                %ui-select-choices{ repeat: 'contact.id as contact in contacts', refresh: "searchContact($select.search)", 'refresh-delay': "0" }
                  %div{ ng: { bind: { html: 'contact.name + " - " + contact.client.name' } } }
            .row.type2
              Date
              %br
              %span.bs-datepicker
                %input.box.w4{ name: 'date', type: 'text', datepicker: { popup: 'MMMM d, y' }, ng: { model: 'selected[type.name].date', required: true, click: 'callDateOpened = true' }, 'is-open': 'callDateOpened' }
            .row.type2
              Time
              %timepicker-pop.input-group.wrap-select-time{"input-time" => "selected[type.name].time", "show-meridian" => "showMeridian"}

          .show-hide-remainder-form-wrap
            .show-hide-remainder-form
              %span.title-remainder Reminder
              .switch-remainder-form
                %input#rem-act-deal-toggle.cmn-toggle.cmn-toggle-round-flat{:type => "checkbox", ng: { model: '$parent.actRemColl' } }/
                %label{:for => "rem-act-deal-toggle"}
                  %span
            %div{ ng: { show: '$parent.actRemColl' } }
              .form-group.reminder-name-wrap
                %label.control-label{ for: 'name' } Reminder name*
                %input.form-control.reminder-name{ placeholder: '', ng: { model: 'activityReminder.name', required: true }, name: 'name' }

              .form-group.reminder-date-wrap
                %label.control-label{ for: 'date' } Remind on date*
                %span.bs-datepicker
                  %input.box.w4.reminder-date{ name: 'date', type: 'text', datepicker: { popup: 'MMMM d, y' }, ng: { model: 'activityReminder._date', required: true, click: 'callDateOpened = true' }, 'is-open': 'callDateOpened' }
              .form-group.reminder-on-time-wrap
                %label.control-label{ for: 'stage' } Remind on time*
                %timepicker-pop.input-group.reminder-on-time{"input-time" => "activityReminder._time", "show-meridian" => "showMeridian"}

              .form-group.reminder-note-wrap
                %label.control-label{ for: 'note' } Reminder note
                %textarea.form-control.reminder-note{ placeholder: '', ng: { model: 'activityReminder.comment' }, name: 'note' }
