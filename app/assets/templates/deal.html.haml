#deal
  .container
    .row.return
      .col-xs-12
        %a{ href:'/deals' }
          = inline_svg 'icons/caret.svg', class: 'transform'
          Back to Deals
    #deal_overview.row.campaign
      .col-xs-9
        %h3.deal-name
          {{ currentDeal.advertiser.name + (currentDeal.agency ? " - " + currentDeal.agency.name : "") }}
    #deal_overview.row.campaign
      .col-xs-9.icon-show-popup-wrapper
        %h3.deal-name{ editable: { text: 'currentDeal.name' }, onaftersave: 'updateDeal()', 'e-name': 'deal-name' }
          {{ currentDeal.name }}

        .clock.show-create-remainders-popup
          %label{ 'for': 'deal-reminders'}
            = inline_svg 'icons/reminder-icon-clock.svg'
          %input.show-form-create-reminders#deal-reminders{ type: 'checkbox', ng: { model: 'showReminder' } }

          %div.wrap-form{ ng: { show: 'showReminder' } }
            #reminder_modal
              .modal-header.text-center
                %label{'aria-hidden' => 'true', 'for' => 'deal-reminders',  ng: { click: 'cancel()' }}
                  = inline_svg 'icons/close.svg'
              %form{ name: 'dealReminderForm', ng: { submit: 'submitReminderForm()' } }
                .modal-body
                  .form-group.reminder-name-wrap{ ng: { class: '{error: reminderOptions.errors.Name}' } }
                    %label.control-label{ for: 'name', ng: { class: '{error: reminderOptions.errors.Name}' } } Reminder name*
                    %input.form-control.reminder-name{ placeholder: '', ng: { model: 'reminder.name', class: '{error: reminderOptions.errors.Name}' }, name: 'name' }

                  .form-group.reminder-date-wrap{ ng: { class: '{error: reminderOptions.errors.Date}' } }
                    %label.control-label{ for: 'date', ng: { class: '{error: reminderOptions.errors.Date}' } } Remind on date*
                    %span.bs-datepicker
                      %input.box.w4.reminder-date{ name: 'date', type: 'text', datepicker: { popup: 'MMMM d, y' }, ng: { model: 'reminder._date', required: true, click: 'callDateOpened = true', class: '{error: reminderOptions.errors.Date}' }, 'is-open': 'callDateOpened' }

                  .form-group.reminder-on-time-wrap{ ng: { class: '{error: reminderOptions.errors.Time}' } }
                    %label.control-label{ for: 'stage', ng: { class: '{error: reminderOptions.errors.Time}' } } Remind on time*
                    %timepicker-pop.input-group.reminder-on-time{"input-time" => "reminder._time", "show-meridian" => "reminderOptions.showMeridian", ng: { class: '{ error: reminderOptions.errors.Time }' } }

                  .form-group.reminder-note-wrap
                    %label.control-label{ for: 'comment' } Reminder note
                    %textarea.form-control.reminder-note{ placeholder: '', ng: { model: 'reminder.comment' }, name: 'comment' }

                .modal-footer.text-center
                  %button.btn.btn-primary.btn-lg.btn-add-remainder{ type: 'submit', ng: { disabled: 'reminderOptions.buttonDisabled' } } Set Reminder
    #nav.transparent.sec
      .row
        .col-xs-12
          %ul.nav.nav-tabs
            %li{ ng: { repeat: 'anchor in anchors', class: '{ active: isActive(anchor.id) }' } }
              %a{ ng: { click: 'scrollTo(anchor.id)' } }
                {{ anchor.name }}
            %li.pull-right.nav-text.last
              Updated {{ currentDeal.updated_at | date: 'MMMM d, y' }}

    #campaign
      %h3.header
        Campaign
      .well
        .row
          .col-xs-4.campaign-period
            .row
              .col-xs-12
                Campaign Period
            .row
              .col-xs-12
                %h4.bs-datepicker
                  %span.edit{ datepicker: { popup: 'MMMM d, y', timezone: true }, ng: { model: 'currentDeal.start_date', click: 'startOpened = true', class: '{ editing: startOpened }', change: 'updateDeal()' }, 'is-open': 'startOpened' }
                    {{ currentDeal.start_date | date: 'MMM d, y': '+0000' }}
                  \-
                  %span.edit{ datepicker: { popup: 'MMMM d, y', timezone: true }, ng: { model: 'currentDeal.end_date', click: 'endOpened = true', class: '{ editing: endOpened }', change: 'updateDeal()' }, 'is-open': 'endOpened' }
                    {{ currentDeal.end_date | date: 'MMM d, y': '+0000' }}

          .col-xs-2.campaign-period.text-center
            .row
              .col-xs-12
                Total Amount
            .row
              .col-xs-12
                %h4#total-amount
                  {{ currentDeal.budget / 100 | currency: '$': 0 }}
          .col-xs-2.campaign-period.text-center
            .row
              .col-xs-12
                Forecast Amount
            .row
              .col-xs-12
                %h4#forecast
                  {{ currentDeal.budget / 100 * currentDeal.stage.probability / 100 | currency: '$' :0 }}
          .col-xs-2.campaign-period.text-center
            .row
              .col-xs-12
                Current Stage
            .row
              .col-xs-12
                %h5
                  .stage{ editable: { select: 'currentDeal.stage_id' }, 'e-ng-options': 'stage.id as stage.name for stage in stages', onaftersave: 'updateDealStage(currentDeal)', onshow: 'getStages()' }
                    {{ currentDeal.stage.name }}
                    .small
                      {{ currentDeal.stage.probability }}% probability
      #revenue_schedule.table-wrapper
        %table.table.white-table
          %thead
            %tr
              %th.text-center Product
              %th.text-center.no-pad Total Budget
              %th.text-center{ ng: { repeat: 'month in currentDeal.months' } }
                {{ month | boDate }}

          %tbody
            %tr{ ng: { repeat: 'deal_product in currentDeal.deal_products' } }
              %td
                %span.hover-delete{ ng: { click: 'deleteDealProduct(deal_product)' } }
                  = inline_svg 'icons/trash.svg'
                {{ deal_product.name }}
              %td.text-center.currency-table
                %div
                  %span{ 'e-name': '{{ deal_product.id }}', editable: { text: 'deal_product.budget' }, onaftersave: 'updateDealProduct(deal_product)' }
                    {{ deal_product.budget | currency:'$':0  }}
                  %span.small.total-budget__percent{ 'ng-class': "{'has-error':deal_product.isIncorrectTotalBudgetPercent}"}
                    {{deal_product.total_budget_percent + '%'}}
              %td.text-center.currency-table{ ng: { repeat: 'deal_product_budget in deal_product.deal_product_budgets' } }
                %div{'ng-if': '!deal_product_budget.editMode'}
                  %span.editable{ 'ng-click': 'initProductEditMode(deal_product, deal_product_budget, "moneyOnFocus", "saveCopyProduct")' }
                    {{ deal_product_budget.budget | currency:'$':0 }}
                  %div
                    %span.small.editable{'ng-click': 'initProductEditMode(deal_product, deal_product_budget, "percentOnFocus", "saveCopyProduct")'}
                      {{ deal_product_budget.budget_percent+ '%'}}
                %div{'ng-if': 'deal_product_budget.editMode'}
                  %input.currency-table__money{ 'ng-model': 'deal_product_budget.budget',
                    'ng-change': 'changeMonthBudget(deal_product, deal_product_budget, $index, $event, "moneyOnFocus")',
                    'ng-keypress': 'changeMonthBudget(deal_product, deal_product_budget, $index, $event, "moneyOnFocus")',
                    'ng-click': 'initProductEditMode(deal_product, deal_product_budget, "moneyOnFocus")',
                    id:'{{"deal_product_budget-" + deal_product_budget.id}}',
                    'ng-blur':'disableProductsEditMode(deal_product, deal_product.deal_product_budgets, deal_product_budget)',
                    'numbers-only':'' }
                  %span.glyphicon.glyphicon-link
                  %input.currency-table__percent{ 'ng-model': 'deal_product_budget.budget_percent',
                    'ng-change': 'changeMonthBudget(deal_product, deal_product_budget, $index, $event, "percentOnFocus")',
                    'ng-keypress': 'changeMonthBudget(deal_product, deal_product_budget, $index, $event, "percentOnFocus")',
                    'ng-click': 'initProductEditMode(deal_product, deal_product_budget, "percentOnFocus")',
                    id:'{{"deal_product_budget-percent-" + deal_product_budget.id}}',
                    'ng-blur':'disableProductsEditMode(deal_product, deal_product.deal_product_budgets, deal_product_budget)',
                    'numbers-only':'' }

      #new-product.well.dark
        .row{ ng: { hide: 'showProductForm' } }
          .col-xs-12
            %a.add-product{ href: '', ng: { click: 'toggleProductForm()' } }
              = inline_svg 'icons/add.svg'
              Add Product
        .row{ ng: { show: 'showProductForm' } }
          .col-xs-12
            %form#product-form{ ng: { submit: 'addProduct()' } }
              .row
                .col-xs-2
                  .row.bordered
                    .col-xs-12
                      .form-group
                        %label.control-label{ for: 'product' } Product
                        %ui-select{ name: 'product', ng: { model: 'deal_product.product_id', disabled: true, required: true } }
                          %ui-select-match{ placeholder: 'Product' }
                            {{ $select.selected.name }}
                          %ui-select-choices{ repeat: 'product.id as product in products | filter: { name: $select.search }' }
                            %div{ ng: { bind: { html: 'product.name' } } }
                  .row.bordered
                    .col-xs-12
                      .form-group.new-product-form
                        %label.control-label{ for: 'total_budget' } Total Budget
                        %input.form-control{ 'ng-model': 'deal_product.budget',
                          'ng-change': 'changeTotalBudget()'}
                        %span.small{'ng-class': "{'has-error':deal_product.isIncorrectTotalBudgetPercent}"}
                          {{ (deal_product.budget_percent || 0 )+ '%'}}
                  .row
                    .col-xs-12
                      %button.btn.btn-primary.btn-block{ type: 'submit',
                        'ng-disabled': 'deal_product.isIncorrectTotalBudgetPercent || !deal_product.product_id', } Add Product
                    .col-xs-12
                      %button.btn.btn-primary.btn-block{ng: { click: 'resetAddProduct()', disabled:'deal_product.budget_percent === 100' }, type: 'button' } Reset
                    .col-xs-12
                      %button#cancel.btn.btn-default.btn-block{ng: { click: 'cancelAddProduct()' }, type: 'button' } Cancel
                .col-xs-10
                  .row.months.new-product-form
                    .col-xs-2{ ng: { repeat: 'month in deal_product.months' } }
                      .form-group
                        %label.control-label Month \#{{ $index + 1 }}
                        %input.form-control.offset-bottom{ 'ng-model': 'month.value',
                        'ng-disabled': '!deal_product.budget',
                        'ng-change': 'changeMonthValue(month.value, $index)',
                        'ng-focus': 'cutDollar(month.value, $index)',
                        'ng-blur': 'setDollar(month.value, $index)',
                        'numbers-only':''}
                        %input.form-control{ 'ng-model': 'month.percent_value',
                        'ng-disabled': '!deal_product.budget',
                        'ng-change': 'changeMonthPercent(month.percent_value, $index)',
                        'ng-focus': 'cutPercent(month.percent_value, $index)',
                        'ng-blur': 'setPercent(month.percent_value, $index)',
                        'numbers-only':''}

    #activities.row
      %h3
        Activities
      #activities-content.row
        .col-xs-7.pad5a
          %div{ ng: { include: "'partials/activities_deal.html'" } }

        .col-xs-5.pad
          %div{ ng: { include: "'partials/activities_feed_deal.html'" } }

    #teamsplit.row
      .col-xs-12
        #members.section
          %span.pull-right{ dropdown: true, 'dropdown-append-to-body': true, 'auto-close': 'outsideClick'  }
            %a.add-member{ href: '', dropdown: { toggle: true }, ng: { click: 'showLinkExistingUser()' } }
              = inline_svg 'icons/add.svg'
            %ul.dropdown-menu.new-member-options
              %li.existing-user-options
                %ui-select{ name: 'user-list', ng: { model: 'userToLink', disabled: true }, 'append-to-body': 'true', 'on-select': 'linkExistingUser($item)' }
                  %ui-select-match{ placeholder: 'start typing their name here' }
                    {{ $select.selected.name }}
                  %ui-select-choices{ repeat: 'user in users | filter: { name: $select.search }' }
                    %div{ ng: { bind: { html: 'user.name' } } }

        %h3.header
          Team & Split

        #teamsplits.table-wrapper
          %table.table.table-striped.black-table.sec
            %thead
              %tr
                %th.left Member
                %th.left Role
                %th.left Share
                %th.action-column
            %tbody
              %tr{ ng: { repeat: "member in currentDeal.members | orderBy: 'name'"} }
                %td
                  {{ member.name }}
                %td
                  %span{ 'e-name': 'role', editable: { select: 'member.role.option_id' }, 'e-ng-options': 'option.id as option.name for option in member.role.options', onaftersave: 'updateDealMember(member)' }
                    {{ member.role.option.name }}
                %td
                  %span{ 'e-name': 'share', editable: { text: 'member.share' }, onaftersave: 'updateDealMember(member)' }
                    {{ member.share }}%
                %td.action-column.info-td
                  .empty
                %td.action-td
                  %a.delete-member{ href: '', ng: { click: 'deleteMember(member)' } }
                    = inline_svg 'icons/trash.svg'

    #contact.row
      .col-xs-12
        #add-contact.section
          %span.pull-right
            %a.add-contact{ href: '', ng: { click: 'addContact()' } }
              = inline_svg 'icons/add.svg'

        %h3.header
          Contacts

        #contacts.table-wrapper
          %table.table.table-striped.black-table.sec
            %thead
              %tr
                %th.left Name
                %th.left Position
                %th.left Email
                %th.left Client Name
            %tbody
              %tr{ ng: { repeat: "contact in currentDeal.contacts"} }
                %td
                  {{ contact.name }}
                %td
                  {{ contact.position }}
                %td
                  {{ contact.address.email }}
                %td
                  {{ contact.primary_client_json.name }}




    #info.col-xs-6.pull-right
      %h3.header Additional Info
      .well
        .row.field
          .col-xs-10
            .row
              .col-xs-4
                %h4.field-label Type
            .row
              .col-xs-9.field-value.deal-type{ 'e-id': 'deal-type', editable: { select: 'currentDeal.deal_type.option_id' }, 'e-ng-options': 'option.id as option.name for option in currentDeal.deal_type.options', onaftersave: 'updateDeal()' }
                {{ currentDeal.deal_type.option.name }}
        .row.field
          .col-xs-10
            .row
              .col-xs-4
                %h4.field-label Source
            .row
              .col-xs-9.field-value{ 'e-id': 'deal-source', editable: { select: 'currentDeal.source_type.option_id' }, 'e-ng-options': 'option.id as option.name for option in currentDeal.source_type.options', onaftersave: 'updateDeal()' }
                {{ currentDeal.source_type.option.name }}
        .row.field
          .col-xs-10
            .row
              .col-xs-4
                %h4.field-label Next Steps
            .row
              .col-xs-9.field-value{ 'e-name': 'next-steps', editable: { text: 'currentDeal.next_steps' }, onaftersave: 'updateDeal()' }
                {{ currentDeal.next_steps }}
        .row.field
          .col-xs-10
            .row
              .col-xs-4
                %h4.field-label Created
            .row
              .col-xs-9.field-value
                {{ currentDeal.creator.first_name }} {{ currentDeal.creator.last_name }} on {{ currentDeal.created_at | date: 'shortDate' }} @ {{ currentDeal.created_at | date: 'shortTime'}}
        .row.field
          .col-xs-10
            .row
              .col-xs-4
                %h4.field-label Closed
            .row
              .col-xs-9.field-value
                {{ currentDeal.closed_at | date: 'shortDate' }}
        .row.field
          .col-xs-10
            .row
              .col-xs-4
                %h4.field-label Closed Reason
            .row
              .col-xs-9.field-value{ 'e-id': 'close-reason', editable: { select: 'currentDeal.close_reason.option_id' }, 'e-ng-options': 'option.id as option.name for option in currentDeal.close_reason.options', onaftersave: 'updateDeal()' }
                {{ currentDeal.close_reason.option.name }}
